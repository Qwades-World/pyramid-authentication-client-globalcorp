/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AggregationType } from './aggregationType';
import { DataType } from './dataType';
import { ModelAttributeType } from './modelAttributeType';

/**
* Definition of a measure in the model definition, contains column unique identifies, aggregation, etc. 
*/
export class ModelingMeasure {
    /**
    * The measure\'s System ID
    */
    'measureId'?: string;
    'aggregationType'?: AggregationType;
    /**
    * The expression inside the aggregation type
    */
    'expression'?: string;
    /**
    * The measure\'s display name
    */
    'displayName'?: string;
    'dataType'?: DataType;
    /**
    * The measure\'s format string
    */
    'format'?: string;
    /**
    * The measure\'s description
    */
    'description'?: string;
    /**
    * The measure\'s scale
    */
    'scale'?: number;
    /**
    * The measure\'s Unique identifier
    */
    'uniqueName'?: string;
    /**
    * This measure\'s measure group name
    */
    'measureGroup'?: string;
    /**
    * The column to take the suffix from
    */
    'suffixColumnUniqueName'?: string;
    /**
    * The column to take the prefix from
    */
    'prefixColumnUniqueName'?: string;
    /**
    * The Unique identifier of the column this measure is based on
    */
    'sourceColumnUniqueName'?: string;
    /**
    * The measure\'s display folder name
    */
    'displayFolder'?: string;
    'measureType'?: ModelAttributeType;
    /**
    * Value used to determine the type of the item receiving, use the class name
    */
    'inheritanceType'?: string = 'ModelingMeasure';

    static discriminator: string | undefined = "inheritanceType";

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "measureId",
            "baseName": "measureId",
            "type": "string"
        },
        {
            "name": "aggregationType",
            "baseName": "aggregationType",
            "type": "AggregationType"
        },
        {
            "name": "expression",
            "baseName": "expression",
            "type": "string"
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string"
        },
        {
            "name": "dataType",
            "baseName": "dataType",
            "type": "DataType"
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "scale",
            "baseName": "scale",
            "type": "number"
        },
        {
            "name": "uniqueName",
            "baseName": "uniqueName",
            "type": "string"
        },
        {
            "name": "measureGroup",
            "baseName": "measureGroup",
            "type": "string"
        },
        {
            "name": "suffixColumnUniqueName",
            "baseName": "suffixColumnUniqueName",
            "type": "string"
        },
        {
            "name": "prefixColumnUniqueName",
            "baseName": "prefixColumnUniqueName",
            "type": "string"
        },
        {
            "name": "sourceColumnUniqueName",
            "baseName": "sourceColumnUniqueName",
            "type": "string"
        },
        {
            "name": "displayFolder",
            "baseName": "displayFolder",
            "type": "string"
        },
        {
            "name": "measureType",
            "baseName": "measureType",
            "type": "ModelAttributeType"
        },
        {
            "name": "inheritanceType",
            "baseName": "inheritanceType",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ModelingMeasure.attributeTypeMap;
    }
}

