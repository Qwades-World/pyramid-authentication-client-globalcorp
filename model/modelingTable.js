"use strict";
/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModelingTable = void 0;
/**
* Table definition in a model, contains table schema, name, columns, etc.
*/
var ModelingTable = /** @class */ (function () {
    function ModelingTable() {
        /**
        * Value used to determine the type of the item receiving, use the class name
        */
        this['inheritanceType'] = 'ModelingTable';
    }
    ModelingTable.getAttributeTypeMap = function () {
        return ModelingTable.attributeTypeMap;
    };
    ModelingTable.discriminator = undefined;
    ModelingTable.attributeTypeMap = [
        {
            "name": "primaryKeyColumnUniqueName",
            "baseName": "primaryKeyColumnUniqueName",
            "type": "string"
        },
        {
            "name": "isAggregatedTable",
            "baseName": "isAggregatedTable",
            "type": "boolean"
        },
        {
            "name": "modelingMeasures",
            "baseName": "modelingMeasures",
            "type": "Array<ModelingMeasure>"
        },
        {
            "name": "modelingTableType",
            "baseName": "modelingTableType",
            "type": "ModelingTableType"
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string"
        },
        {
            "name": "modelingAggregationMappings",
            "baseName": "modelingAggregationMappings",
            "type": "Array<ModelingAggregationMapping>"
        },
        {
            "name": "syncColumnsWithDb",
            "baseName": "syncColumnsWithDb",
            "type": "boolean"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "isVisible",
            "baseName": "isVisible",
            "type": "boolean"
        },
        {
            "name": "schemaName",
            "baseName": "schemaName",
            "type": "string"
        },
        {
            "name": "modelingColumns",
            "baseName": "modelingColumns",
            "type": "Array<ModelingColumn>"
        },
        {
            "name": "sourceTableName",
            "baseName": "sourceTableName",
            "type": "string"
        },
        {
            "name": "uniqueName",
            "baseName": "uniqueName",
            "type": "string"
        },
        {
            "name": "translations",
            "baseName": "translations",
            "type": "Array<MetaDataTranslation>"
        },
        {
            "name": "tableSize",
            "baseName": "tableSize",
            "type": "number"
        },
        {
            "name": "isML",
            "baseName": "isML",
            "type": "boolean"
        },
        {
            "name": "measureGroups",
            "baseName": "measureGroups",
            "type": "Set<string>"
        },
        {
            "name": "tableId",
            "baseName": "tableId",
            "type": "string"
        },
        {
            "name": "modelingHierarchies",
            "baseName": "modelingHierarchies",
            "type": "Array<ModelingHierarchy>"
        },
        {
            "name": "foldersTranslations",
            "baseName": "foldersTranslations",
            "type": "Array<ModelingFolderTranslations>"
        },
        {
            "name": "customQuery",
            "baseName": "customQuery",
            "type": "string"
        },
        {
            "name": "inheritanceType",
            "baseName": "inheritanceType",
            "type": "string"
        }
    ];
    return ModelingTable;
}());
exports.ModelingTable = ModelingTable;
