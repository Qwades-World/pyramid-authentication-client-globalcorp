/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DataType } from './dataType';
import { MaskingMethodType } from './maskingMethodType';
import { ModelingColumnCategories } from './modelingColumnCategories';
import { ModelingColumnType } from './modelingColumnType';

/**
* Definition of a table column in the model.
*/
export class ModelingColumn {
    /**
    * Is this a column used in the security panel
    */
    'isSecurity'?: boolean;
    /**
    * The column\'s system ID
    */
    'columnId'?: string;
    /**
    * The column\'s display name
    */
    'displayName'?: string;
    /**
    * Unique identifier of the table that contains this column
    */
    'parentUniqueName'?: string;
    /**
    * Is this a unicode string (nvarchar, nchar, nclob, etc)
    */
    'isUnicode'?: boolean;
    /**
    * The column\'s description
    */
    'description'?: string;
    /**
    * Scale of the source column type (if decimal)
    */
    'scale'?: number;
    /**
    * Is column for experiment unique identifier
    */
    'isUniqueIdentifier'?: boolean;
    'type'?: DataType;
    /**
    * Can this column be aggregated
    */
    'isAggregatable'?: boolean;
    /**
    * Index of this column in the table, start at 0
    */
    'columnIndex'?: number;
    /**
    * Does this column has a default member
    */
    'hasDefaultMember'?: boolean;
    /**
    * The column\'s name in the database
    */
    'sourceColumnName'?: string;
    /**
    * Is this column indexed in the source database
    */
    'isIndexed'?: boolean;
    /**
    * Boolean indicating if this column has multi-measures
    */
    'hasMultiMeasures'?: boolean;
    'columnCategory'?: ModelingColumnCategories;
    /**
    * Unique identifier of the default column to sort by when the user sorts by this column
    */
    'defaultSortColumnUniqueName'?: string;
    /**
    * The column\'s data format
    */
    'format'?: string;
    /**
    * Is the default sorting descending
    */
    'isDefaultSortDescending'?: boolean;
    /**
    * Is column for publication distribution
    */
    'isDistribution'?: boolean;
    /**
    * Is the column displayed in the 
    */
    'isVisible'?: boolean;
    'columnType'?: ModelingColumnType;
    /**
    * The column\'s unique identifier, used in relationships, hierarchies and measures
    */
    'uniqueName'?: string;
    /**
    * Unique identifier of the key column for this column
    */
    'keyColumn'?: string;
    /**
    * Size of the source column type (string length or decimal precision)
    */
    'size'?: number;
    /**
    * User defined category of this column
    */
    'customCategoryId'?: string;
    'maskingMethodType'?: MaskingMethodType;
    /**
    * Column\'s display folder name
    */
    'displayFolder'?: string;
    /**
    * Value used to determine the type of the item receiving, use the class name
    */
    'inheritanceType'?: string = 'ModelingColumn';

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "isSecurity",
            "baseName": "isSecurity",
            "type": "boolean"
        },
        {
            "name": "columnId",
            "baseName": "columnId",
            "type": "string"
        },
        {
            "name": "displayName",
            "baseName": "displayName",
            "type": "string"
        },
        {
            "name": "parentUniqueName",
            "baseName": "parentUniqueName",
            "type": "string"
        },
        {
            "name": "isUnicode",
            "baseName": "isUnicode",
            "type": "boolean"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "scale",
            "baseName": "scale",
            "type": "number"
        },
        {
            "name": "isUniqueIdentifier",
            "baseName": "isUniqueIdentifier",
            "type": "boolean"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "DataType"
        },
        {
            "name": "isAggregatable",
            "baseName": "isAggregatable",
            "type": "boolean"
        },
        {
            "name": "columnIndex",
            "baseName": "columnIndex",
            "type": "number"
        },
        {
            "name": "hasDefaultMember",
            "baseName": "hasDefaultMember",
            "type": "boolean"
        },
        {
            "name": "sourceColumnName",
            "baseName": "sourceColumnName",
            "type": "string"
        },
        {
            "name": "isIndexed",
            "baseName": "isIndexed",
            "type": "boolean"
        },
        {
            "name": "hasMultiMeasures",
            "baseName": "hasMultiMeasures",
            "type": "boolean"
        },
        {
            "name": "columnCategory",
            "baseName": "columnCategory",
            "type": "ModelingColumnCategories"
        },
        {
            "name": "defaultSortColumnUniqueName",
            "baseName": "defaultSortColumnUniqueName",
            "type": "string"
        },
        {
            "name": "format",
            "baseName": "format",
            "type": "string"
        },
        {
            "name": "isDefaultSortDescending",
            "baseName": "isDefaultSortDescending",
            "type": "boolean"
        },
        {
            "name": "isDistribution",
            "baseName": "isDistribution",
            "type": "boolean"
        },
        {
            "name": "isVisible",
            "baseName": "isVisible",
            "type": "boolean"
        },
        {
            "name": "columnType",
            "baseName": "columnType",
            "type": "ModelingColumnType"
        },
        {
            "name": "uniqueName",
            "baseName": "uniqueName",
            "type": "string"
        },
        {
            "name": "keyColumn",
            "baseName": "keyColumn",
            "type": "string"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "number"
        },
        {
            "name": "customCategoryId",
            "baseName": "customCategoryId",
            "type": "string"
        },
        {
            "name": "maskingMethodType",
            "baseName": "maskingMethodType",
            "type": "MaskingMethodType"
        },
        {
            "name": "displayFolder",
            "baseName": "displayFolder",
            "type": "string"
        },
        {
            "name": "inheritanceType",
            "baseName": "inheritanceType",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ModelingColumn.attributeTypeMap;
    }
}

