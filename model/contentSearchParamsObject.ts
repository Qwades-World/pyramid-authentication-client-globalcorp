/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ContentTypeObject } from './contentTypeObject';
import { SearchMatchType } from './searchMatchType';
import { SearchRootFolderType } from './searchRootFolderType';

/**
* The content search object for specifying search criteria to be used in content searches.
*/
export class ContentSearchParamsObject {
    /**
    * Server name when searching by data source
    */
    'server'?: string;
    /**
    * Database name when searching by data source
    */
    'dataBase'?: string;
    /**
    * This is a folder path to use in searching. Use in the format Tenant-Name\\Root-Folder-name\\folderA\\folderB\\..... using the folder captions, not their IDs
    */
    'folderPathToSearch'?: string;
    /**
    * Boolean to indicate if this is an advanced search. Advanced searches will use other provided criteria. Otherwise, the simple search will just use the search string only
    */
    'isAdvancedSearch'?: boolean;
    'searchRootFolderType': SearchRootFolderType;
    /**
    * Starting date for range searching on modified dates
    */
    'startModifiedDate'?: Date;
    /**
    * The terms to be used in the search
    */
    'searchString': string;
    'searchMatchType': SearchMatchType;
    /**
    * Ending date for range searching on modified dates
    */
    'endModifiedDate'?: Date;
    /**
    * Starting date for range searching on create dates
    */
    'startCreatedDate'?: Date;
    /**
    * Model name when searching by data source
    */
    'model'?: string;
    /**
    * Ending date for range searching on create dates
    */
    'endCreatedDate'?: Date;
    /**
    * A listing of different content types to narrow the search
    */
    'filterTypes': Array<ContentTypeObject>;
    /**
    * Allows fall back in search
    */
    'allowFallback'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "server",
            "baseName": "server",
            "type": "string"
        },
        {
            "name": "dataBase",
            "baseName": "dataBase",
            "type": "string"
        },
        {
            "name": "folderPathToSearch",
            "baseName": "folderPathToSearch",
            "type": "string"
        },
        {
            "name": "isAdvancedSearch",
            "baseName": "isAdvancedSearch",
            "type": "boolean"
        },
        {
            "name": "searchRootFolderType",
            "baseName": "searchRootFolderType",
            "type": "SearchRootFolderType"
        },
        {
            "name": "startModifiedDate",
            "baseName": "startModifiedDate",
            "type": "Date"
        },
        {
            "name": "searchString",
            "baseName": "searchString",
            "type": "string"
        },
        {
            "name": "searchMatchType",
            "baseName": "searchMatchType",
            "type": "SearchMatchType"
        },
        {
            "name": "endModifiedDate",
            "baseName": "endModifiedDate",
            "type": "Date"
        },
        {
            "name": "startCreatedDate",
            "baseName": "startCreatedDate",
            "type": "Date"
        },
        {
            "name": "model",
            "baseName": "model",
            "type": "string"
        },
        {
            "name": "endCreatedDate",
            "baseName": "endCreatedDate",
            "type": "Date"
        },
        {
            "name": "filterTypes",
            "baseName": "filterTypes",
            "type": "Array<ContentTypeObject>"
        },
        {
            "name": "allowFallback",
            "baseName": "allowFallback",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ContentSearchParamsObject.attributeTypeMap;
    }
}

