/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ScatterColorDropZone } from './scatterColorDropZone';
import { ScatterDetailsDropZone } from './scatterDetailsDropZone';
import { ScatterFilterDropZone } from './scatterFilterDropZone';
import { ScatterLabelsDropZone } from './scatterLabelsDropZone';
import { ScatterMotionDropZone } from './scatterMotionDropZone';
import { ScatterShapeDropZone } from './scatterShapeDropZone';
import { ScatterSizeDropZone } from './scatterSizeDropZone';
import { ScatterTooltipDropZone } from './scatterTooltipDropZone';
import { ScatterTrellisHorizontalDropZone } from './scatterTrellisHorizontalDropZone';
import { ScatterTrellisVerticalDropZone } from './scatterTrellisVerticalDropZone';
import { ScatterVisualType } from './scatterVisualType';
import { ScatterXValuesDropZone } from './scatterXValuesDropZone';
import { ScatterYValuesDropZone } from './scatterYValuesDropZone';

/**
* Settings for the Scatter visual
*/
export class ScatterVisual {
    'trellisHorizontal'?: ScatterTrellisHorizontalDropZone;
    'color'?: ScatterColorDropZone;
    'motion'?: ScatterMotionDropZone;
    'shape'?: ScatterShapeDropZone;
    'trellisVertical'?: ScatterTrellisVerticalDropZone;
    'yValues'?: ScatterYValuesDropZone;
    'tooltip'?: ScatterTooltipDropZone;
    'xValues'?: ScatterXValuesDropZone;
    'labels'?: ScatterLabelsDropZone;
    'filter'?: ScatterFilterDropZone;
    'visualType'?: ScatterVisualType;
    'size'?: ScatterSizeDropZone;
    'details'?: ScatterDetailsDropZone;
    /**
    * Value used to determine the type of the item receiving, use the class name
    */
    'inheritanceType'?: string = 'ScatterVisual';

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "trellisHorizontal",
            "baseName": "trellisHorizontal",
            "type": "ScatterTrellisHorizontalDropZone"
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "ScatterColorDropZone"
        },
        {
            "name": "motion",
            "baseName": "motion",
            "type": "ScatterMotionDropZone"
        },
        {
            "name": "shape",
            "baseName": "shape",
            "type": "ScatterShapeDropZone"
        },
        {
            "name": "trellisVertical",
            "baseName": "trellisVertical",
            "type": "ScatterTrellisVerticalDropZone"
        },
        {
            "name": "yValues",
            "baseName": "yValues",
            "type": "ScatterYValuesDropZone"
        },
        {
            "name": "tooltip",
            "baseName": "tooltip",
            "type": "ScatterTooltipDropZone"
        },
        {
            "name": "xValues",
            "baseName": "xValues",
            "type": "ScatterXValuesDropZone"
        },
        {
            "name": "labels",
            "baseName": "labels",
            "type": "ScatterLabelsDropZone"
        },
        {
            "name": "filter",
            "baseName": "filter",
            "type": "ScatterFilterDropZone"
        },
        {
            "name": "visualType",
            "baseName": "visualType",
            "type": "ScatterVisualType"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "ScatterSizeDropZone"
        },
        {
            "name": "details",
            "baseName": "details",
            "type": "ScatterDetailsDropZone"
        },
        {
            "name": "inheritanceType",
            "baseName": "inheritanceType",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ScatterVisual.attributeTypeMap;
    }
}

