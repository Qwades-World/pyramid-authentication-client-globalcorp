/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { JoinType } from './joinType';
import { ModelingRelationshipColumnPair } from './modelingRelationshipColumnPair';

/**
* Relationship definition used in the models when joining across tables columns.
*/
export class ModelingRelationship {
    /**
    * Boolean indicating if the join is bi-directional
    */
    'isBiDirectional'?: boolean;
    /**
    * The model\'s system ID
    */
    'columns'?: Array<ModelingRelationshipColumnPair>;
    /**
    * The foreign table\'s unique name
    */
    'foreignTableUniqueName'?: string;
    /**
    * Boolean indicating if the join is Many-to-Many
    */
    'isManyToMany'?: boolean;
    /**
    * The relationship\'s system ID
    */
    'relationshipId'?: string;
    'type'?: JoinType;
    /**
    * The primary table\'s unique name
    */
    'primaryTableUniqueName'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "isBiDirectional",
            "baseName": "isBiDirectional",
            "type": "boolean"
        },
        {
            "name": "columns",
            "baseName": "columns",
            "type": "Array<ModelingRelationshipColumnPair>"
        },
        {
            "name": "foreignTableUniqueName",
            "baseName": "foreignTableUniqueName",
            "type": "string"
        },
        {
            "name": "isManyToMany",
            "baseName": "isManyToMany",
            "type": "boolean"
        },
        {
            "name": "relationshipId",
            "baseName": "relationshipId",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "JoinType"
        },
        {
            "name": "primaryTableUniqueName",
            "baseName": "primaryTableUniqueName",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ModelingRelationship.attributeTypeMap;
    }
}

