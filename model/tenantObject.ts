/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { FirstWorkday } from './firstWorkday';
import { PaperType } from './paperType';

/**
* The tenant object.
*/
export class TenantObject {
    /**
    * Default theme id
    */
    'defaultThemeId'?: string;
    /**
    * The default Hub template that should be used for the tenant\'s hubs - using the Hub template ID
    */
    'defaultHubTemplateId'?: string;
    /**
    * The organizational unit name that will be used in constrained domain searching. Active Directory only.
    */
    'organizationalUnitText'?: string;
    /**
    * Number of Scientist seat licenses to allocate to the tenant
    */
    'scientistSeats'?: number;
    /**
    * Number of Viewer seat licenses to allocate to the tenant
    */
    'viewerSeats': number;
    /**
    * Boolean flag to Allow end users to create webhook channels
    */
    'allowWebhookChannels'?: boolean;
    'firstWorkday'?: FirstWorkday;
    /**
    * User defaults
    */
    'selectedUserDefaultsId'?: string;
    /**
    * Number of Basic seat licenses to allocate to the tenant
    */
    'basicSeats'?: number;
    /**
    * Boolean flag to show a tenant\'s group folders
    */
    'showGroupFolder'?: boolean;
    /**
    * Default AI server
    */
    'defaultAiServer'?: string;
    /**
    * Number of Professional seat licenses to allocate to the tenant
    */
    'proSeats': number;
    /**
    * Switch to enable constrained domain searching for domain admins. Active Directory only.
    */
    'isOrganizationalUnitOn'?: boolean;
    /**
    * The domain entity name that will be used in constrained domain searching. Active Directory only.
    */
    'domainName'?: string;
    /**
    * The tenant\'s name
    */
    'name': string;
    /**
    * Number of Analyst seat licenses to allocate to the tenant
    */
    'analystSeats'?: number;
    /**
    * Boolean flag to show - User defaults override
    */
    'isUserDefaultsOverridable'?: boolean;
    /**
    * The default email template that should be used for the tenant\'s emails - using the Email template ID
    */
    'defaultEmailTemplateId'?: string;
    /**
    * The tenant ID. If provided, the GUID will be used. Otherwise, the function will auto-create it.
    */
    'id'?: string;
    'defaultPaperType'?: PaperType;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "defaultThemeId",
            "baseName": "defaultThemeId",
            "type": "string"
        },
        {
            "name": "defaultHubTemplateId",
            "baseName": "defaultHubTemplateId",
            "type": "string"
        },
        {
            "name": "organizationalUnitText",
            "baseName": "organizationalUnitText",
            "type": "string"
        },
        {
            "name": "scientistSeats",
            "baseName": "scientistSeats",
            "type": "number"
        },
        {
            "name": "viewerSeats",
            "baseName": "viewerSeats",
            "type": "number"
        },
        {
            "name": "allowWebhookChannels",
            "baseName": "allowWebhookChannels",
            "type": "boolean"
        },
        {
            "name": "firstWorkday",
            "baseName": "firstWorkday",
            "type": "FirstWorkday"
        },
        {
            "name": "selectedUserDefaultsId",
            "baseName": "selectedUserDefaultsId",
            "type": "string"
        },
        {
            "name": "basicSeats",
            "baseName": "basicSeats",
            "type": "number"
        },
        {
            "name": "showGroupFolder",
            "baseName": "showGroupFolder",
            "type": "boolean"
        },
        {
            "name": "defaultAiServer",
            "baseName": "defaultAiServer",
            "type": "string"
        },
        {
            "name": "proSeats",
            "baseName": "proSeats",
            "type": "number"
        },
        {
            "name": "isOrganizationalUnitOn",
            "baseName": "isOrganizationalUnitOn",
            "type": "boolean"
        },
        {
            "name": "domainName",
            "baseName": "domainName",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "analystSeats",
            "baseName": "analystSeats",
            "type": "number"
        },
        {
            "name": "isUserDefaultsOverridable",
            "baseName": "isUserDefaultsOverridable",
            "type": "boolean"
        },
        {
            "name": "defaultEmailTemplateId",
            "baseName": "defaultEmailTemplateId",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "defaultPaperType",
            "baseName": "defaultPaperType",
            "type": "PaperType"
        }    ];

    static getAttributeTypeMap() {
        return TenantObject.attributeTypeMap;
    }
}

