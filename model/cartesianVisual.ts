/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CartesianCategoriesDropZone } from './cartesianCategoriesDropZone';
import { CartesianColorDropZone } from './cartesianColorDropZone';
import { CartesianFilterDropZone } from './cartesianFilterDropZone';
import { CartesianLabelsDropZone } from './cartesianLabelsDropZone';
import { CartesianMotionDropZone } from './cartesianMotionDropZone';
import { CartesianShapeDropZone } from './cartesianShapeDropZone';
import { CartesianSizeDropZone } from './cartesianSizeDropZone';
import { CartesianTooltipDropZone } from './cartesianTooltipDropZone';
import { CartesianTrellisHorizontalDropZone } from './cartesianTrellisHorizontalDropZone';
import { CartesianTrellisVerticalDropZone } from './cartesianTrellisVerticalDropZone';
import { CartesianValuesDropZone } from './cartesianValuesDropZone';
import { CartesianVisualType } from './cartesianVisualType';

/**
* Settings for the Cartesian visual
*/
export class CartesianVisual {
    'filter'?: CartesianFilterDropZone;
    'visualType'?: CartesianVisualType;
    'trellisHorizontal'?: CartesianTrellisHorizontalDropZone;
    'color'?: CartesianColorDropZone;
    'size'?: CartesianSizeDropZone;
    'motion'?: CartesianMotionDropZone;
    'shape'?: CartesianShapeDropZone;
    'trellisVertical'?: CartesianTrellisVerticalDropZone;
    'values'?: CartesianValuesDropZone;
    'tooltip'?: CartesianTooltipDropZone;
    'categories'?: CartesianCategoriesDropZone;
    'labels'?: CartesianLabelsDropZone;
    /**
    * Value used to determine the type of the item receiving, use the class name
    */
    'inheritanceType'?: string = 'CartesianVisual';

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "filter",
            "baseName": "filter",
            "type": "CartesianFilterDropZone"
        },
        {
            "name": "visualType",
            "baseName": "visualType",
            "type": "CartesianVisualType"
        },
        {
            "name": "trellisHorizontal",
            "baseName": "trellisHorizontal",
            "type": "CartesianTrellisHorizontalDropZone"
        },
        {
            "name": "color",
            "baseName": "color",
            "type": "CartesianColorDropZone"
        },
        {
            "name": "size",
            "baseName": "size",
            "type": "CartesianSizeDropZone"
        },
        {
            "name": "motion",
            "baseName": "motion",
            "type": "CartesianMotionDropZone"
        },
        {
            "name": "shape",
            "baseName": "shape",
            "type": "CartesianShapeDropZone"
        },
        {
            "name": "trellisVertical",
            "baseName": "trellisVertical",
            "type": "CartesianTrellisVerticalDropZone"
        },
        {
            "name": "values",
            "baseName": "values",
            "type": "CartesianValuesDropZone"
        },
        {
            "name": "tooltip",
            "baseName": "tooltip",
            "type": "CartesianTooltipDropZone"
        },
        {
            "name": "categories",
            "baseName": "categories",
            "type": "CartesianCategoriesDropZone"
        },
        {
            "name": "labels",
            "baseName": "labels",
            "type": "CartesianLabelsDropZone"
        },
        {
            "name": "inheritanceType",
            "baseName": "inheritanceType",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return CartesianVisual.attributeTypeMap;
    }
}

