"use strict";
/**
 * Pyramid Analytics Web API
 * Pyramid Analytics Web API enables user applications to manage their pyramid                                             data and settings
 *
 * The version of the OpenAPI document: 2023.12.181
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartesianVisualType = void 0;
/**
* The type of graphical chart or visualization used in the Discover report for the Cartesian visual
*/
var CartesianVisualType;
(function (CartesianVisualType) {
    CartesianVisualType[CartesianVisualType["ColumnChart"] = 'ColumnChart'] = "ColumnChart";
    CartesianVisualType[CartesianVisualType["StackedColumnChart"] = 'StackedColumnChart'] = "StackedColumnChart";
    CartesianVisualType[CartesianVisualType["Stacked100ColumnChart"] = 'Stacked100ColumnChart'] = "Stacked100ColumnChart";
    CartesianVisualType[CartesianVisualType["MarimekkoChart"] = 'MarimekkoChart'] = "MarimekkoChart";
    CartesianVisualType[CartesianVisualType["TornadoChart"] = 'TornadoChart'] = "TornadoChart";
    CartesianVisualType[CartesianVisualType["BarChart"] = 'BarChart'] = "BarChart";
    CartesianVisualType[CartesianVisualType["StackedBarChart"] = 'StackedBarChart'] = "StackedBarChart";
    CartesianVisualType[CartesianVisualType["Stacked100BarChart"] = 'Stacked100BarChart'] = "Stacked100BarChart";
    CartesianVisualType[CartesianVisualType["LineChart"] = 'LineChart'] = "LineChart";
    CartesianVisualType[CartesianVisualType["RadarLineChart"] = 'RadarLineChart'] = "RadarLineChart";
    CartesianVisualType[CartesianVisualType["RadarSmoothLineChart"] = 'RadarSmoothLineChart'] = "RadarSmoothLineChart";
    CartesianVisualType[CartesianVisualType["RadarAreaChart"] = 'RadarAreaChart'] = "RadarAreaChart";
    CartesianVisualType[CartesianVisualType["RadarAreaSmoothLineChart"] = 'RadarAreaSmoothLineChart'] = "RadarAreaSmoothLineChart";
    CartesianVisualType[CartesianVisualType["RadarPointChart"] = 'RadarPointChart'] = "RadarPointChart";
    CartesianVisualType[CartesianVisualType["StepLineChart"] = 'StepLineChart'] = "StepLineChart";
    CartesianVisualType[CartesianVisualType["PointChart"] = 'PointChart'] = "PointChart";
    CartesianVisualType[CartesianVisualType["LollipopChart"] = 'LollipopChart'] = "LollipopChart";
    CartesianVisualType[CartesianVisualType["AreaChart"] = 'AreaChart'] = "AreaChart";
    CartesianVisualType[CartesianVisualType["SplineAreaChart"] = 'SplineAreaChart'] = "SplineAreaChart";
    CartesianVisualType[CartesianVisualType["StepLineAreaChart"] = 'StepLineAreaChart'] = "StepLineAreaChart";
    CartesianVisualType[CartesianVisualType["SplineChart"] = 'SplineChart'] = "SplineChart";
    CartesianVisualType[CartesianVisualType["StackedAreaChart"] = 'StackedAreaChart'] = "StackedAreaChart";
    CartesianVisualType[CartesianVisualType["SplineStackedAreaChart"] = 'SplineStackedAreaChart'] = "SplineStackedAreaChart";
    CartesianVisualType[CartesianVisualType["StepLineStackedAreaChart"] = 'StepLineStackedAreaChart'] = "StepLineStackedAreaChart";
    CartesianVisualType[CartesianVisualType["Stacked100AreaChart"] = 'Stacked100AreaChart'] = "Stacked100AreaChart";
    CartesianVisualType[CartesianVisualType["SplineStacked100AreaChart"] = 'SplineStacked100AreaChart'] = "SplineStacked100AreaChart";
    CartesianVisualType[CartesianVisualType["StepLineStacked100AreaChart"] = 'StepLineStacked100AreaChart'] = "StepLineStacked100AreaChart";
    CartesianVisualType[CartesianVisualType["StreamSplineChart"] = 'StreamSplineChart'] = "StreamSplineChart";
    CartesianVisualType[CartesianVisualType["StreamAreaChart"] = 'StreamAreaChart'] = "StreamAreaChart";
    CartesianVisualType[CartesianVisualType["StreamStepChart"] = 'StreamStepChart'] = "StreamStepChart";
    CartesianVisualType[CartesianVisualType["Waterfall"] = 'Waterfall'] = "Waterfall";
})(CartesianVisualType || (exports.CartesianVisualType = CartesianVisualType = {}));
